package org.vamdc.basecolTest.dao.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.vamdc.BasecolTest.dao.Collisions;
import org.vamdc.BasecolTest.dao.EnergyTables;
import org.vamdc.BasecolTest.dao.PartitionFunctions;
import org.vamdc.BasecolTest.dao.RefsArticles;

/**
 * Class _RefsGroups was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _RefsGroups extends CayenneDataObject {

    public static final String ID_GROUP_PROPERTY = "idGroup";
    public static final String ID_REF_GROUP_PROPERTY = "idRefGroup";
    public static final String IS_SOURCE_PROPERTY = "isSource";
    public static final String COLLISIONSS_PROPERTY = "collisionss";
    public static final String COLLISIONSS1_PROPERTY = "collisionss1";
    public static final String COLLISIONSS2_PROPERTY = "collisionss2";
    public static final String COLLISIONSS3_PROPERTY = "collisionss3";
    public static final String ENERGYTABLESES_PROPERTY = "energytableses";
    public static final String PARTITIONFUNCTIONSS_PROPERTY = "partitionfunctionss";
    public static final String TO_REFS_ARTICLES_PROPERTY = "toRefsArticles";

    public static final String ID_GROUP_PK_COLUMN = "idGroup";

    public void setIdGroup(Long idGroup) {
        writeProperty(ID_GROUP_PROPERTY, idGroup);
    }
    public Long getIdGroup() {
        return (Long)readProperty(ID_GROUP_PROPERTY);
    }

    public void setIdRefGroup(Long idRefGroup) {
        writeProperty(ID_REF_GROUP_PROPERTY, idRefGroup);
    }
    public Long getIdRefGroup() {
        return (Long)readProperty(ID_REF_GROUP_PROPERTY);
    }

    public void setIsSource(Boolean isSource) {
        writeProperty(IS_SOURCE_PROPERTY, isSource);
    }
    public Boolean getIsSource() {
        return (Boolean)readProperty(IS_SOURCE_PROPERTY);
    }

    public void addToCollisionss(Collisions obj) {
        addToManyTarget(COLLISIONSS_PROPERTY, obj, true);
    }
    public void removeFromCollisionss(Collisions obj) {
        removeToManyTarget(COLLISIONSS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Collisions> getCollisionss() {
        return (List<Collisions>)readProperty(COLLISIONSS_PROPERTY);
    }


    public void addToCollisionss1(Collisions obj) {
        addToManyTarget(COLLISIONSS1_PROPERTY, obj, true);
    }
    public void removeFromCollisionss1(Collisions obj) {
        removeToManyTarget(COLLISIONSS1_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Collisions> getCollisionss1() {
        return (List<Collisions>)readProperty(COLLISIONSS1_PROPERTY);
    }


    public void addToCollisionss2(Collisions obj) {
        addToManyTarget(COLLISIONSS2_PROPERTY, obj, true);
    }
    public void removeFromCollisionss2(Collisions obj) {
        removeToManyTarget(COLLISIONSS2_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Collisions> getCollisionss2() {
        return (List<Collisions>)readProperty(COLLISIONSS2_PROPERTY);
    }


    public void addToCollisionss3(Collisions obj) {
        addToManyTarget(COLLISIONSS3_PROPERTY, obj, true);
    }
    public void removeFromCollisionss3(Collisions obj) {
        removeToManyTarget(COLLISIONSS3_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Collisions> getCollisionss3() {
        return (List<Collisions>)readProperty(COLLISIONSS3_PROPERTY);
    }


    public void addToEnergytableses(EnergyTables obj) {
        addToManyTarget(ENERGYTABLESES_PROPERTY, obj, true);
    }
    public void removeFromEnergytableses(EnergyTables obj) {
        removeToManyTarget(ENERGYTABLESES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<EnergyTables> getEnergytableses() {
        return (List<EnergyTables>)readProperty(ENERGYTABLESES_PROPERTY);
    }


    public void addToPartitionfunctionss(PartitionFunctions obj) {
        addToManyTarget(PARTITIONFUNCTIONSS_PROPERTY, obj, true);
    }
    public void removeFromPartitionfunctionss(PartitionFunctions obj) {
        removeToManyTarget(PARTITIONFUNCTIONSS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PartitionFunctions> getPartitionfunctionss() {
        return (List<PartitionFunctions>)readProperty(PARTITIONFUNCTIONSS_PROPERTY);
    }


    public void setToRefsArticles(RefsArticles toRefsArticles) {
        setToOneTarget(TO_REFS_ARTICLES_PROPERTY, toRefsArticles, true);
    }

    public RefsArticles getToRefsArticles() {
        return (RefsArticles)readProperty(TO_REFS_ARTICLES_PROPERTY);
    }


}
