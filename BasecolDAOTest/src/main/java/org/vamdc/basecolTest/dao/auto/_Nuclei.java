package org.vamdc.basecolTest.dao.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.vamdc.BasecolTest.dao.MoleculeAtoms;

/**
 * Class _Nuclei was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Nuclei extends CayenneDataObject {

    public static final String ISOTOPE_PROPERTY = "isotope";
    public static final String MOST_ABUNDANT_PROPERTY = "mostAbundant";
    public static final String NUCLEAR_CHARGE_PROPERTY = "nuclearCharge";
    public static final String NUCLEUS_ID_PROPERTY = "nucleusId";
    public static final String SPIN_PROPERTY = "spin";
    public static final String SYMBOL_PROPERTY = "symbol";
    public static final String MOLECULEATOMSS_PROPERTY = "moleculeatomss";

    public static final String NUCLEUS_ID_PK_COLUMN = "nucleus_id";

    public void setIsotope(Integer isotope) {
        writeProperty(ISOTOPE_PROPERTY, isotope);
    }
    public Integer getIsotope() {
        return (Integer)readProperty(ISOTOPE_PROPERTY);
    }

    public void setMostAbundant(Boolean mostAbundant) {
        writeProperty(MOST_ABUNDANT_PROPERTY, mostAbundant);
    }
    public Boolean getMostAbundant() {
        return (Boolean)readProperty(MOST_ABUNDANT_PROPERTY);
    }

    public void setNuclearCharge(Integer nuclearCharge) {
        writeProperty(NUCLEAR_CHARGE_PROPERTY, nuclearCharge);
    }
    public Integer getNuclearCharge() {
        return (Integer)readProperty(NUCLEAR_CHARGE_PROPERTY);
    }

    public void setNucleusId(Integer nucleusId) {
        writeProperty(NUCLEUS_ID_PROPERTY, nucleusId);
    }
    public Integer getNucleusId() {
        return (Integer)readProperty(NUCLEUS_ID_PROPERTY);
    }

    public void setSpin(Float spin) {
        writeProperty(SPIN_PROPERTY, spin);
    }
    public Float getSpin() {
        return (Float)readProperty(SPIN_PROPERTY);
    }

    public void setSymbol(String symbol) {
        writeProperty(SYMBOL_PROPERTY, symbol);
    }
    public String getSymbol() {
        return (String)readProperty(SYMBOL_PROPERTY);
    }

    public void addToMoleculeatomss(MoleculeAtoms obj) {
        addToManyTarget(MOLECULEATOMSS_PROPERTY, obj, true);
    }
    public void removeFromMoleculeatomss(MoleculeAtoms obj) {
        removeToManyTarget(MOLECULEATOMSS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<MoleculeAtoms> getMoleculeatomss() {
        return (List<MoleculeAtoms>)readProperty(MOLECULEATOMSS_PROPERTY);
    }


}
