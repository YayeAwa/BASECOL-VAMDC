package org.vamdc.basecolTest.dao.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.vamdc.BasecolTest.dao.EnergyTables;
import org.vamdc.BasecolTest.dao.PartitionFunctions;
import org.vamdc.BasecolTest.dao.StatusCurrentWorks;
import org.vamdc.BasecolTest.dao.StatusNeeds;

/**
 * Class _Symmetries was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Symmetries extends CayenneDataObject {

    public static final String DESIGNATION_PROPERTY = "designation";
    public static final String ID_SYMMETRY_PROPERTY = "idSymmetry";
    public static final String ENERGYTABLESES_PROPERTY = "energytableses";
    public static final String PARTITIONFUNCTIONSS_PROPERTY = "partitionfunctionss";
    public static final String STATUS_CURRENTWORKSS_PROPERTY = "statusCurrentworkss";
    public static final String STATUS_CURRENTWORKSS1_PROPERTY = "statusCurrentworkss1";
    public static final String STATUS_NEEDSS_PROPERTY = "statusNeedss";
    public static final String STATUS_NEEDSS1_PROPERTY = "statusNeedss1";

    public static final String ID_SYMMETRY_PK_COLUMN = "idSymmetry";

    public void setDesignation(String designation) {
        writeProperty(DESIGNATION_PROPERTY, designation);
    }
    public String getDesignation() {
        return (String)readProperty(DESIGNATION_PROPERTY);
    }

    public void setIdSymmetry(Short idSymmetry) {
        writeProperty(ID_SYMMETRY_PROPERTY, idSymmetry);
    }
    public Short getIdSymmetry() {
        return (Short)readProperty(ID_SYMMETRY_PROPERTY);
    }

    public void addToEnergytableses(EnergyTables obj) {
        addToManyTarget(ENERGYTABLESES_PROPERTY, obj, true);
    }
    public void removeFromEnergytableses(EnergyTables obj) {
        removeToManyTarget(ENERGYTABLESES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<EnergyTables> getEnergytableses() {
        return (List<EnergyTables>)readProperty(ENERGYTABLESES_PROPERTY);
    }


    public void addToPartitionfunctionss(PartitionFunctions obj) {
        addToManyTarget(PARTITIONFUNCTIONSS_PROPERTY, obj, true);
    }
    public void removeFromPartitionfunctionss(PartitionFunctions obj) {
        removeToManyTarget(PARTITIONFUNCTIONSS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PartitionFunctions> getPartitionfunctionss() {
        return (List<PartitionFunctions>)readProperty(PARTITIONFUNCTIONSS_PROPERTY);
    }


    public void addToStatusCurrentworkss(StatusCurrentWorks obj) {
        addToManyTarget(STATUS_CURRENTWORKSS_PROPERTY, obj, true);
    }
    public void removeFromStatusCurrentworkss(StatusCurrentWorks obj) {
        removeToManyTarget(STATUS_CURRENTWORKSS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<StatusCurrentWorks> getStatusCurrentworkss() {
        return (List<StatusCurrentWorks>)readProperty(STATUS_CURRENTWORKSS_PROPERTY);
    }


    public void addToStatusCurrentworkss1(StatusCurrentWorks obj) {
        addToManyTarget(STATUS_CURRENTWORKSS1_PROPERTY, obj, true);
    }
    public void removeFromStatusCurrentworkss1(StatusCurrentWorks obj) {
        removeToManyTarget(STATUS_CURRENTWORKSS1_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<StatusCurrentWorks> getStatusCurrentworkss1() {
        return (List<StatusCurrentWorks>)readProperty(STATUS_CURRENTWORKSS1_PROPERTY);
    }


    public void addToStatusNeedss(StatusNeeds obj) {
        addToManyTarget(STATUS_NEEDSS_PROPERTY, obj, true);
    }
    public void removeFromStatusNeedss(StatusNeeds obj) {
        removeToManyTarget(STATUS_NEEDSS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<StatusNeeds> getStatusNeedss() {
        return (List<StatusNeeds>)readProperty(STATUS_NEEDSS_PROPERTY);
    }


    public void addToStatusNeedss1(StatusNeeds obj) {
        addToManyTarget(STATUS_NEEDSS1_PROPERTY, obj, true);
    }
    public void removeFromStatusNeedss1(StatusNeeds obj) {
        removeToManyTarget(STATUS_NEEDSS1_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<StatusNeeds> getStatusNeedss1() {
        return (List<StatusNeeds>)readProperty(STATUS_NEEDSS1_PROPERTY);
    }


}
