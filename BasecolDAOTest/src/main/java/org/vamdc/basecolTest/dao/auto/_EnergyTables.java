package org.vamdc.basecolTest.dao.auto;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.vamdc.BasecolTest.dao.CaseByCase;
import org.vamdc.BasecolTest.dao.Collisions;
import org.vamdc.BasecolTest.dao.Elements;
import org.vamdc.BasecolTest.dao.EnergyTablesLevels;
import org.vamdc.BasecolTest.dao.EnergyTablesProcessus;
import org.vamdc.BasecolTest.dao.EnergyTablesQuantumNumbers;
import org.vamdc.BasecolTest.dao.HyperfineQNums;
import org.vamdc.BasecolTest.dao.MatchedEnergyTables;
import org.vamdc.BasecolTest.dao.RefsGroups;
import org.vamdc.BasecolTest.dao.Symmetries;
import org.vamdc.BasecolTest.dao.Units;

/**
 * Class _EnergyTables was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _EnergyTables extends CayenneDataObject {

    public static final String COMMENT_PROPERTY = "comment";
    public static final String CREATION_DATE_PROPERTY = "creationDate";
    public static final String ELECTRONIC_COMPONENT_DESCRIPTION_PROPERTY = "electronicComponentDescription";
    public static final String ENERGY_ORIGIN_PROPERTY = "energyOrigin";
    public static final String EXP_PROPERTY = "exp";
    public static final String ID_ENERGY_TABLE_PROPERTY = "idEnergyTable";
    public static final String IS_VISIBLE_PROPERTY = "isVisible";
    public static final String MODIFICATION_DATE_PROPERTY = "modificationDate";
    public static final String TERM_SYMBOL_PROPERTY = "termSymbol";
    public static final String TITLE_PROPERTY = "title";
    public static final String TOTAL_MOLECULAR_PROJECTION_L_PROPERTY = "totalMolecularProjectionL";
    public static final String TOTAL_SPIN_MOMENTUM_S_PROPERTY = "totalSpinMomentumS";
    public static final String VIBRATIONAL_COMPONENT_DESCRIPTION_PROPERTY = "vibrationalComponentDescription";
    public static final String CASEBYCASES_PROPERTY = "casebycases";
    public static final String COLLISIONSS_PROPERTY = "collisionss";
    public static final String COLLISIONSS1_PROPERTY = "collisionss1";
    public static final String ENERGYTABLES_LEVELSS_PROPERTY = "energytablesLevelss";
    public static final String ENERGYTABLES_PROCESSUSES_PROPERTY = "energytablesProcessuses";
    public static final String ENERGYTABLES_QUANTUMNUMBERSS_PROPERTY = "energytablesQuantumnumberss";
    public static final String HYPERFINE_QNUMSS_PROPERTY = "hyperfineQnumss";
    public static final String MATCHEDENERGYTABLESES_PROPERTY = "matchedenergytableses";
    public static final String TO_ELEMENTS_PROPERTY = "toElements";
    public static final String TO_REFS_GROUPS_PROPERTY = "toRefsGroups";
    public static final String TO_SYMMETRIES_PROPERTY = "toSymmetries";
    public static final String TO_UNITS_PROPERTY = "toUnits";

    public static final String ID_ENERGY_TABLE_PK_COLUMN = "idEnergyTable";

    public void setComment(String comment) {
        writeProperty(COMMENT_PROPERTY, comment);
    }
    public String getComment() {
        return (String)readProperty(COMMENT_PROPERTY);
    }

    public void setCreationDate(Date creationDate) {
        writeProperty(CREATION_DATE_PROPERTY, creationDate);
    }
    public Date getCreationDate() {
        return (Date)readProperty(CREATION_DATE_PROPERTY);
    }

    public void setElectronicComponentDescription(String electronicComponentDescription) {
        writeProperty(ELECTRONIC_COMPONENT_DESCRIPTION_PROPERTY, electronicComponentDescription);
    }
    public String getElectronicComponentDescription() {
        return (String)readProperty(ELECTRONIC_COMPONENT_DESCRIPTION_PROPERTY);
    }

    public void setEnergyOrigin(String energyOrigin) {
        writeProperty(ENERGY_ORIGIN_PROPERTY, energyOrigin);
    }
    public String getEnergyOrigin() {
        return (String)readProperty(ENERGY_ORIGIN_PROPERTY);
    }

    public void setExp(String exp) {
        writeProperty(EXP_PROPERTY, exp);
    }
    public String getExp() {
        return (String)readProperty(EXP_PROPERTY);
    }

    public void setIdEnergyTable(Long idEnergyTable) {
        writeProperty(ID_ENERGY_TABLE_PROPERTY, idEnergyTable);
    }
    public Long getIdEnergyTable() {
        return (Long)readProperty(ID_ENERGY_TABLE_PROPERTY);
    }

    public void setIsVisible(Short isVisible) {
        writeProperty(IS_VISIBLE_PROPERTY, isVisible);
    }
    public Short getIsVisible() {
        return (Short)readProperty(IS_VISIBLE_PROPERTY);
    }

    public void setModificationDate(Date modificationDate) {
        writeProperty(MODIFICATION_DATE_PROPERTY, modificationDate);
    }
    public Date getModificationDate() {
        return (Date)readProperty(MODIFICATION_DATE_PROPERTY);
    }

    public void setTermSymbol(String termSymbol) {
        writeProperty(TERM_SYMBOL_PROPERTY, termSymbol);
    }
    public String getTermSymbol() {
        return (String)readProperty(TERM_SYMBOL_PROPERTY);
    }

    public void setTitle(String title) {
        writeProperty(TITLE_PROPERTY, title);
    }
    public String getTitle() {
        return (String)readProperty(TITLE_PROPERTY);
    }

    public void setTotalMolecularProjectionL(Double totalMolecularProjectionL) {
        writeProperty(TOTAL_MOLECULAR_PROJECTION_L_PROPERTY, totalMolecularProjectionL);
    }
    public Double getTotalMolecularProjectionL() {
        return (Double)readProperty(TOTAL_MOLECULAR_PROJECTION_L_PROPERTY);
    }

    public void setTotalSpinMomentumS(Double totalSpinMomentumS) {
        writeProperty(TOTAL_SPIN_MOMENTUM_S_PROPERTY, totalSpinMomentumS);
    }
    public Double getTotalSpinMomentumS() {
        return (Double)readProperty(TOTAL_SPIN_MOMENTUM_S_PROPERTY);
    }

    public void setVibrationalComponentDescription(String vibrationalComponentDescription) {
        writeProperty(VIBRATIONAL_COMPONENT_DESCRIPTION_PROPERTY, vibrationalComponentDescription);
    }
    public String getVibrationalComponentDescription() {
        return (String)readProperty(VIBRATIONAL_COMPONENT_DESCRIPTION_PROPERTY);
    }

    public void addToCasebycases(CaseByCase obj) {
        addToManyTarget(CASEBYCASES_PROPERTY, obj, true);
    }
    public void removeFromCasebycases(CaseByCase obj) {
        removeToManyTarget(CASEBYCASES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CaseByCase> getCasebycases() {
        return (List<CaseByCase>)readProperty(CASEBYCASES_PROPERTY);
    }


    public void addToCollisionss(Collisions obj) {
        addToManyTarget(COLLISIONSS_PROPERTY, obj, true);
    }
    public void removeFromCollisionss(Collisions obj) {
        removeToManyTarget(COLLISIONSS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Collisions> getCollisionss() {
        return (List<Collisions>)readProperty(COLLISIONSS_PROPERTY);
    }


    public void addToCollisionss1(Collisions obj) {
        addToManyTarget(COLLISIONSS1_PROPERTY, obj, true);
    }
    public void removeFromCollisionss1(Collisions obj) {
        removeToManyTarget(COLLISIONSS1_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Collisions> getCollisionss1() {
        return (List<Collisions>)readProperty(COLLISIONSS1_PROPERTY);
    }


    public void addToEnergytablesLevelss(EnergyTablesLevels obj) {
        addToManyTarget(ENERGYTABLES_LEVELSS_PROPERTY, obj, true);
    }
    public void removeFromEnergytablesLevelss(EnergyTablesLevels obj) {
        removeToManyTarget(ENERGYTABLES_LEVELSS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<EnergyTablesLevels> getEnergytablesLevelss() {
        return (List<EnergyTablesLevels>)readProperty(ENERGYTABLES_LEVELSS_PROPERTY);
    }


    public void addToEnergytablesProcessuses(EnergyTablesProcessus obj) {
        addToManyTarget(ENERGYTABLES_PROCESSUSES_PROPERTY, obj, true);
    }
    public void removeFromEnergytablesProcessuses(EnergyTablesProcessus obj) {
        removeToManyTarget(ENERGYTABLES_PROCESSUSES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<EnergyTablesProcessus> getEnergytablesProcessuses() {
        return (List<EnergyTablesProcessus>)readProperty(ENERGYTABLES_PROCESSUSES_PROPERTY);
    }


    public void addToEnergytablesQuantumnumberss(EnergyTablesQuantumNumbers obj) {
        addToManyTarget(ENERGYTABLES_QUANTUMNUMBERSS_PROPERTY, obj, true);
    }
    public void removeFromEnergytablesQuantumnumberss(EnergyTablesQuantumNumbers obj) {
        removeToManyTarget(ENERGYTABLES_QUANTUMNUMBERSS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<EnergyTablesQuantumNumbers> getEnergytablesQuantumnumberss() {
        return (List<EnergyTablesQuantumNumbers>)readProperty(ENERGYTABLES_QUANTUMNUMBERSS_PROPERTY);
    }


    public void addToHyperfineQnumss(HyperfineQNums obj) {
        addToManyTarget(HYPERFINE_QNUMSS_PROPERTY, obj, true);
    }
    public void removeFromHyperfineQnumss(HyperfineQNums obj) {
        removeToManyTarget(HYPERFINE_QNUMSS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<HyperfineQNums> getHyperfineQnumss() {
        return (List<HyperfineQNums>)readProperty(HYPERFINE_QNUMSS_PROPERTY);
    }


    public void addToMatchedenergytableses(MatchedEnergyTables obj) {
        addToManyTarget(MATCHEDENERGYTABLESES_PROPERTY, obj, true);
    }
    public void removeFromMatchedenergytableses(MatchedEnergyTables obj) {
        removeToManyTarget(MATCHEDENERGYTABLESES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<MatchedEnergyTables> getMatchedenergytableses() {
        return (List<MatchedEnergyTables>)readProperty(MATCHEDENERGYTABLESES_PROPERTY);
    }


    public void setToElements(Elements toElements) {
        setToOneTarget(TO_ELEMENTS_PROPERTY, toElements, true);
    }

    public Elements getToElements() {
        return (Elements)readProperty(TO_ELEMENTS_PROPERTY);
    }


    public void addToToRefsGroups(RefsGroups obj) {
        addToManyTarget(TO_REFS_GROUPS_PROPERTY, obj, true);
    }
    public void removeFromToRefsGroups(RefsGroups obj) {
        removeToManyTarget(TO_REFS_GROUPS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<RefsGroups> getToRefsGroups() {
        return (List<RefsGroups>)readProperty(TO_REFS_GROUPS_PROPERTY);
    }


    public void setToSymmetries(Symmetries toSymmetries) {
        setToOneTarget(TO_SYMMETRIES_PROPERTY, toSymmetries, true);
    }

    public Symmetries getToSymmetries() {
        return (Symmetries)readProperty(TO_SYMMETRIES_PROPERTY);
    }


    public void setToUnits(Units toUnits) {
        setToOneTarget(TO_UNITS_PROPERTY, toUnits, true);
    }

    public Units getToUnits() {
        return (Units)readProperty(TO_UNITS_PROPERTY);
    }


}
